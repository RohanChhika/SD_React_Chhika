{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rohan\\\\Documents\\\\Sofware Design\\\\Project\\\\SD_React_Chhika\\\\src\\\\components\\\\profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const {\n    user,\n    isAuthenticated,\n    isLoading,\n    getAccessTokenSilently\n  } = useAuth0();\n  const [userInfo, setUserInfo] = useState(null);\n\n  // Move the conditional check inside the useEffect\n  useEffect(() => {\n    // Only execute the code inside the useEffect if isAuthenticated is true\n    if (isAuthenticated) {\n      const fetchUserData = async () => {\n        try {\n          const token = await getAccessTokenSilently(); // Get the Auth0 access token\n          const response = await fetch('https://fundit.azurewebsites.net/login', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({\n              userID: user.sub\n            })\n          });\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n          const data = await response.json();\n          setUserInfo(data);\n        } catch (error) {\n          console.error('Failed to fetch user data:', error);\n        }\n      };\n      fetchUserData();\n    }\n  }, [isAuthenticated, getAccessTokenSilently, user === null || user === void 0 ? void 0 : user.email]); // Dependencies remain the same\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Loading...\"\n    }, void 0, false);\n  }\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Please log in\"\n    }, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: user.nickname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: user.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User ID: \", user.sub]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), userInfo && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Role: \", userInfo.role]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n};\n_s(Profile, \"HBtel/jZFRRF7cyTWhMGR9hkuWo=\", false, function () {\n  return [useAuth0];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","useAuth0","Fragment","_Fragment","jsxDEV","_jsxDEV","Profile","_s","user","isAuthenticated","isLoading","getAccessTokenSilently","userInfo","setUserInfo","fetchUserData","token","response","fetch","method","headers","body","JSON","stringify","userID","sub","ok","Error","status","data","json","error","console","email","children","nickname","fileName","_jsxFileName","lineNumber","columnNumber","role","_c","$RefreshReg$"],"sources":["C:/Users/Rohan/Documents/Sofware Design/Project/SD_React_Chhika/src/components/profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\n\r\nconst Profile = () => {\r\n  const { user, isAuthenticated, isLoading, getAccessTokenSilently } = useAuth0();\r\n  const [userInfo, setUserInfo] = useState(null);\r\n\r\n  // Move the conditional check inside the useEffect\r\n  useEffect(() => {\r\n    // Only execute the code inside the useEffect if isAuthenticated is true\r\n    if (isAuthenticated) {\r\n      const fetchUserData = async () => {\r\n        try {\r\n          const token = await getAccessTokenSilently(); // Get the Auth0 access token\r\n          const response = await fetch('https://fundit.azurewebsites.net/login', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({\r\n              userID: user.sub\r\n            })\r\n          });\r\n\r\n          if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n          }\r\n\r\n          const data = await response.json();\r\n          setUserInfo(data);\r\n        } catch (error) {\r\n          console.error('Failed to fetch user data:', error);\r\n        }\r\n      };\r\n\r\n      fetchUserData();\r\n    }\r\n  }, [isAuthenticated, getAccessTokenSilently, user?.email]);  // Dependencies remain the same\r\n\r\n  if (isLoading) {\r\n    return <>Loading...</>;\r\n  }\r\n\r\n  if (!isAuthenticated) {\r\n    return <>Please log in</>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <p>{user.nickname}</p>\r\n      <p>{user.email}</p>\r\n      <p>User ID: {user.sub}</p>\r\n      {userInfo && (\r\n        <>\r\n          <p>Role: {userInfo.role}</p>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}