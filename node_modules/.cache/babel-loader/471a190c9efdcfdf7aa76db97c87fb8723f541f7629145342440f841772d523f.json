{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yoni\\\\Documents\\\\SD_React_Chhika\\\\src\\\\components\\\\LoginButton.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginButton = () => {\n  _s();\n  const {\n    loginWithRedirect,\n    isAuthenticated,\n    user,\n    getAccessTokenSilently\n  } = useAuth0();\n  useEffect(() => {\n    const addUserToDatabase = async () => {\n      if (!user) return; // Only proceed if the user is defined\n\n      try {\n        const token = await getAccessTokenSilently();\n        const response = await fetch('http://localhost:3000/signup', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            userID: user.sub,\n            // Auth0 user identifier\n            role: 'applicant',\n            contact: user.email // User email from Auth0\n          })\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        console.log('User added to the database successfully.');\n      } catch (error) {\n        console.error('Failed to add user to the database:', error);\n      }\n    };\n    if (isAuthenticated) {\n      addUserToDatabase();\n    }\n  }, [isAuthenticated, user, getAccessTokenSilently]);\n  return !isAuthenticated && /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => loginWithRedirect(),\n    children: \"Log In\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginButton, \"Zzucf6sWCVexuQpQcQMrNh6ONGY=\", false, function () {\n  return [useAuth0];\n});\n_c = LoginButton;\nexport default LoginButton;\nvar _c;\n$RefreshReg$(_c, \"LoginButton\");","map":{"version":3,"names":["React","useEffect","useAuth0","jsxDEV","_jsxDEV","LoginButton","_s","loginWithRedirect","isAuthenticated","user","getAccessTokenSilently","addUserToDatabase","token","response","fetch","method","headers","Authorization","body","JSON","stringify","userID","sub","role","contact","email","ok","Error","status","console","log","error","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Yoni/Documents/SD_React_Chhika/src/components/LoginButton.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst LoginButton = () => {\r\n  const { loginWithRedirect, isAuthenticated, user, getAccessTokenSilently } = useAuth0();\r\n\r\n  useEffect(() => {\r\n    const addUserToDatabase = async () => {\r\n      if (!user) return; // Only proceed if the user is defined\r\n\r\n      try {\r\n        const token = await getAccessTokenSilently();\r\n        const response = await fetch('http://localhost:3000/signup', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n          },\r\n          body: JSON.stringify({\r\n            userID: user.sub, // Auth0 user identifier\r\n            role: 'applicant',\r\n            contact: user.email // User email from Auth0\r\n          })\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n\r\n        console.log('User added to the database successfully.');\r\n      } catch (error) {\r\n        console.error('Failed to add user to the database:', error);\r\n      }\r\n    };\r\n\r\n    if (isAuthenticated) {\r\n      addUserToDatabase();\r\n    }\r\n  }, [isAuthenticated, user, getAccessTokenSilently]);\r\n\r\n  return !isAuthenticated && (\r\n    <button onClick={() => loginWithRedirect()}>\r\n      Log In\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default LoginButton;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC,iBAAiB;IAAEC,eAAe;IAAEC,IAAI;IAAEC;EAAuB,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAEvFD,SAAS,CAAC,MAAM;IACd,MAAMU,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI,CAACF,IAAI,EAAE,OAAO,CAAC;;MAEnB,IAAI;QACF,MAAMG,KAAK,GAAG,MAAMF,sBAAsB,CAAC,CAAC;QAC5C,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;UAC3DC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClCC,aAAa,EAAG,UAASL,KAAM;UACjC,CAAC;UACDM,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBC,MAAM,EAAEZ,IAAI,CAACa,GAAG;YAAE;YAClBC,IAAI,EAAE,WAAW;YACjBC,OAAO,EAAEf,IAAI,CAACgB,KAAK,CAAC;UACtB,CAAC;QACH,CAAC,CAAC;QAEF,IAAI,CAACZ,QAAQ,CAACa,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBd,QAAQ,CAACe,MAAO,EAAC,CAAC;QAC3D;QAEAC,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;MACzD,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC7D;IACF,CAAC;IAED,IAAIvB,eAAe,EAAE;MACnBG,iBAAiB,CAAC,CAAC;IACrB;EACF,CAAC,EAAE,CAACH,eAAe,EAAEC,IAAI,EAAEC,sBAAsB,CAAC,CAAC;EAEnD,OAAO,CAACF,eAAe,iBACrBJ,OAAA;IAAQ4B,OAAO,EAAEA,CAAA,KAAMzB,iBAAiB,CAAC,CAAE;IAAA0B,QAAA,EAAC;EAE5C;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CACT;AACH,CAAC;AAAC/B,EAAA,CA1CID,WAAW;EAAA,QAC8DH,QAAQ;AAAA;AAAAoC,EAAA,GADjFjC,WAAW;AA4CjB,eAAeA,WAAW;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}