{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yoni\\\\Documents\\\\SD_React_Chhika\\\\src\\\\components\\\\profile.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const {\n    user,\n    isAuthenticated,\n    isLoading,\n    getAccessTokenSilently\n  } = useAuth0();\n  const [userInfo, setUserInfo] = useState(null);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Loading ...\"\n    }, void 0, false);\n  }\n  useEffect(() => {\n    const fetchUserData = async () => {\n      if (isAuthenticated) {\n        try {\n          const token = await getAccessTokenSilently(); // Get the Auth0 access token\n          const response = await fetch('http://localhost:3000/login', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${token}` // Assuming you are using Bearer token\n            },\n            body: JSON.stringify({\n              userID: user.sub // Or any unique identifier used in your user model\n              // You need a more secure way to handle this!\n            })\n          });\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n          const data = await response.json();\n          setUserInfo(data);\n        } catch (error) {\n          console.error('Failed to fetch user data:', error);\n        }\n      }\n    };\n    fetchUserData();\n  }, [isAuthenticated, getAccessTokenSilently, user === null || user === void 0 ? void 0 : user.email]);\n  return isAuthenticated && /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: user.picture,\n      alt: user.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: user.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: user.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User ID: \", user.sub]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this), userInfo && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Role: \", userInfo.role]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n};\n_s(Profile, \"tfZVMMULMrX1SM7VrQ1EwJtbmrI=\", false, function () {\n  return [useAuth0];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useAuth0","Fragment","_Fragment","jsxDEV","_jsxDEV","Profile","_s","user","isAuthenticated","isLoading","getAccessTokenSilently","userInfo","setUserInfo","useState","children","useEffect","fetchUserData","token","response","fetch","method","headers","body","JSON","stringify","userID","sub","ok","Error","status","data","json","error","console","email","src","picture","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","role","_c","$RefreshReg$"],"sources":["C:/Users/Yoni/Documents/SD_React_Chhika/src/components/profile.js"],"sourcesContent":["import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\n\r\nconst Profile = () => {\r\n    const { user, isAuthenticated, isLoading,getAccessTokenSilently } = useAuth0();\r\n    const [userInfo, setUserInfo] = useState(null);\r\n    if (isLoading) {\r\n      return <>Loading ...</>;\r\n    }\r\n    useEffect(() => {\r\n      const fetchUserData = async () => {\r\n        if (isAuthenticated) {\r\n          try {\r\n            const token = await getAccessTokenSilently(); // Get the Auth0 access token\r\n            const response = await fetch('http://localhost:3000/login', {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}` // Assuming you are using Bearer token\r\n              },\r\n              body: JSON.stringify({\r\n                userID: user.sub // Or any unique identifier used in your user model\r\n                 // You need a more secure way to handle this!\r\n                })\r\n            });\r\n  \r\n            if (!response.ok) {\r\n              throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n  \r\n            const data = await response.json();\r\n            setUserInfo(data);\r\n          } catch (error) {\r\n            console.error('Failed to fetch user data:', error);\r\n          }\r\n        }\r\n      };\r\n  \r\n      fetchUserData();\r\n    }, [isAuthenticated, getAccessTokenSilently, user?.email]);\r\n  \r\n    return (\r\n      isAuthenticated && (\r\n        <>\r\n          <img src={user.picture} alt={user.name} />\r\n          <h2>{user.name}</h2>\r\n          <p>{user.email}</p>\r\n          <p>User ID: {user.sub}</p>\r\n          {userInfo && (\r\n        <>\r\n          <p>Role: {userInfo.role}</p>\r\n          {/* Display other user information from your API if available */}\r\n        </>\r\n      )}\r\n        </>\r\n      )\r\n    );\r\n  }\r\n\r\n  export default Profile"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,oBAAoB;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAG9C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM;IAAEC,IAAI;IAAEC,eAAe;IAAEC,SAAS;IAACC;EAAuB,CAAC,GAAGV,QAAQ,CAAC,CAAC;EAC9E,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EAC9C,IAAIJ,SAAS,EAAE;IACb,oBAAOL,OAAA,CAAAF,SAAA;MAAAY,QAAA,EAAE;IAAW,gBAAE,CAAC;EACzB;EACAC,SAAS,CAAC,MAAM;IACd,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAIR,eAAe,EAAE;QACnB,IAAI;UACF,MAAMS,KAAK,GAAG,MAAMP,sBAAsB,CAAC,CAAC,CAAC,CAAC;UAC9C,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;YAC1DC,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACP,cAAc,EAAE,kBAAkB;cAClC,eAAe,EAAG,UAASJ,KAAM,EAAC,CAAC;YACrC,CAAC;YACDK,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;cACnBC,MAAM,EAAElB,IAAI,CAACmB,GAAG,CAAC;cAChB;YACD,CAAC;UACL,CAAC,CAAC;UAEF,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;YAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBV,QAAQ,CAACW,MAAO,EAAC,CAAC;UAC3D;UAEA,MAAMC,IAAI,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC;UAClCnB,WAAW,CAACkB,IAAI,CAAC;QACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QACpD;MACF;IACF,CAAC;IAEDhB,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACR,eAAe,EAAEE,sBAAsB,EAAEH,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE2B,KAAK,CAAC,CAAC;EAE1D,OACE1B,eAAe,iBACbJ,OAAA,CAAAF,SAAA;IAAAY,QAAA,gBACEV,OAAA;MAAK+B,GAAG,EAAE5B,IAAI,CAAC6B,OAAQ;MAACC,GAAG,EAAE9B,IAAI,CAAC+B;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1CtC,OAAA;MAAAU,QAAA,EAAKP,IAAI,CAAC+B;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpBtC,OAAA;MAAAU,QAAA,EAAIP,IAAI,CAAC2B;IAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBtC,OAAA;MAAAU,QAAA,GAAG,WAAS,EAACP,IAAI,CAACmB,GAAG;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzB/B,QAAQ,iBACXP,OAAA,CAAAF,SAAA;MAAAY,QAAA,eACEV,OAAA;QAAAU,QAAA,GAAG,QAAM,EAACH,QAAQ,CAACgC,IAAI;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC,gBAE5B,CACH;EAAA,eACG,CACH;AAEL,CAAC;AAAApC,EAAA,CAtDGD,OAAO;EAAA,QAC2DL,QAAQ;AAAA;AAAA4C,EAAA,GAD1EvC,OAAO;AAwDX,eAAeA,OAAO;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}